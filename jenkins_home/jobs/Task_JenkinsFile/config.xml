<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.40">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.86">
    <script>def workDir = &quot;/home/remote_user/workspace/Task_JenkinsFile&quot;
pipeline{
  agent any
  stages{
    stage(&quot;clean up&quot;){
      steps{
        echo &quot;====== Cleaning Up. ======&quot;
        sh &quot;rm -rf *&quot;
      }
    }
    stage(&quot;checkout&quot;){
      steps{
        echo &quot;====== Checkout Github Repo. ======&quot;
        git credentialsId: &apos;github&apos;, url: &apos;https://github.com/MahmoodAbuAwwad/Internship_Jenkins_Task.git&apos;
        sh &quot;git checkout master&quot;
      }
    }
    stage(&quot;CreatingScript&quot;){
      steps{
        echo &quot;===== Creating Build_number.tar.gz =====&quot;
        sh &quot;tar -cvf ${currentBuild.number}.tar.gz build_number.sh&quot;
      }
    }
    stage(&quot;Dilever&quot;){
      steps{
        echo &quot;-============&quot;
        stash name: &quot;tarFile&quot;,allowEmpty: true, includes: &quot;${currentBuild.number}.tar.gz&quot;
      }
    }
    stage(&quot;DeployOnSlaveMachine&quot;){
      agent {
        label &apos;slave&apos;
      }
      steps{
        echo &quot;===== Deploying on Slave Machine =====&quot;
        sh &quot;rm -f *.tar.gz&quot;
        unstash &apos;tarFile&apos;
        sh &quot;tar -xvf ${currentBuild.number}.tar.gz&quot;
        sh &quot;chmod +x build_number.sh&quot;
        echo &quot;---- Printing HostName and MemUsgae% ---&quot;
        sh &quot;./build_number.sh&quot;
        script{
            memUsage=sh(script: &apos;./build_number.sh |tail -1&apos;,returnStdout: true).trim()
            per = Double.valueOf(memUsage)
            if (per &gt; 80) {
                stage (&apos;FailAndAlert&apos;) {
                sh &apos;echo Fail and Alert&apos;
                }
            }
            if ( per &lt; 80) {
                stage (&apos;SuccessAndPushToNexus&apos;) {
                    sh &apos;echo Push To NExus&apos;
                }
            }
        }
      }
    }
  }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>